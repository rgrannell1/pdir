
"use strict"




const fs             = require('fs')
const path           = require('path')
const events         = require('events')
const mkdirp         = require('mkdirp')
const utils          = require('pdir/commons/utils')
const constants      = require('pdir/commons/constants')
const partitionFiles = require('pdir/app/partition-files')





const targetPath = (sourcePath, grouping) => {

	const targetDir = `${path.dirname(sourcePath)}-${grouping}`
	return path.join(targetDir, path.basename(sourcePath))

}




const createDirectory = (sourceDir, targetDir, callback) => {

	mkdirp(targetDir, err => {

		if (err) {
			process.stderr.write(`error: failed to create directory: ${err.message}\n`)
			return
		}

		fs.lstat(sourceDir, (err, stats) => {

			if (err) {
				process.stderr.write(`error: failed to get ${targetDir} stats: ${err.message}\n`)
				return
			}

			fs.utimes(targetDir, stats.atime, stats.mtime, err => {

				if (err) {
					process.stderr.write(`error: failed to change stats for ${targetDir}: ${err.message}\n`)
					return
				}

				callback( )

			})

		})

	})

}





const splitDirectory = (args, dirs) => {

	const partitioned = new events.EventEmitter( )

	if (path.dirname(constants.workingDir) === constants.workingDir) {

		process.stderr.write('error: will not operate on root directory.\n')
		process.exit(1)

	}

	partitioned.on(constants.events.partitioned, event => {

		const targetFilePath = targetPath(event.fpath, event.grouping)

		if (args.dryRun) {

			console.log(`${event.fpath}	${targetFilePath}`)

		} else {

			createDirectory(path.dirname(event.fpath), path.dirname(targetFilePath), ( ) => {

				utils.fs.copyFile(event.fpath, targetFilePath, args.copy, err => {

					if (err) {
						process.stderr.write(`copy failure: ${err.message}\n`)
						return
					}

				})

			})

		}

	})

	dirs.forEach(dir => {
		utils.fs.listContent(dir, content => {

			utils.fs.emitFileTypes(content)
				.on(constants.events.file, filePath => {
					partitionFiles(partitioned, args, filePath)
				})

		})
	})

}





module.exports = splitDirectory
