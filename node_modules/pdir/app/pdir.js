
"use strict"




const path           = require('path')
const events         = require('events')
const utils          = require('pdir/commons/utils')
const constants      = require('pdir/commons/constants')
const partitionFiles = require('pdir/app/partition-files')




const pdir = rawArgs => {

	const args = pdir.validate(pdir.preprocess(rawArgs))
	console.log(args)

	args.dirs.forEach(dir => {
		utils.fs.listContent(dir, content => {

			const types       = utils.fs.emitFileTypes(content)
			const partitioned = new events.EventEmitter( )

			types.on(constants.events.file, filePath => {
				partitionFiles(partitioned, args, filePath)
			})

		})
	})

}





pdir.preprocess = rawArgs => {

	return {
		dryRun:     rawArgs['--dry-run'],
		dirs:       pdir.preprocess.dirs(rawArgs.SRC),
		extensions: pdir.preprocess.extensions(rawArgs['--extensions'])
	}

}

pdir.preprocess.dirs = dirs => {

	return dirs.map(dir => {
		return path.resolve(process.cwd( ), dir)
	})

}

pdir.preprocess.extensions = extensionGroups => {

	return extensionGroups.map(extensionGroup => {

		const extensions = extensionGroup
			.split(constants.regexs.extensionDelimiter)
			.map(extension => {
				return extension.replace(/^[.]/, '')
			})

		return utils.hof.uniqueOf(extensions)

	})

}





pdir.validate = args => {

	pdir.validate.extensions(args.extensions)

	return args

}

pdir.validate.extensions = extensions => {

	const usedExtensions = Array.prototype.concat.apply([ ], extensions)

	if (utils.hof.uniqueOf(usedExtensions).length !== usedExtensions.length) {

		const summarised = extensions.join('|')

		process.stderr.write(
			'error: extensions were shared between extensions groups:\n' +
			summarised + '\n'
		)
		process.exit(1)

	}

}





module.exports = pdir
