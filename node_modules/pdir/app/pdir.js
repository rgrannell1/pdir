
"use strict"




const path           = require('path')
const utils          = require('pdir/commons/utils')
const constants      = require('pdir/commons/constants')
const splitDirectory = require('pdir/app/split-directory')





const pdir = rawArgs => {

	const args = pdir.validate(pdir.preprocess(rawArgs))

	if (args.stdin) {

		utils.fs.readStdin(dirs => {
			splitDirectory(args, dirs)
		})

	} else {

		process.nextTick(( ) => {
			splitDirectory(args, args.dirs)
		})

	}

}





pdir.preprocess = rawArgs => {

	const args = {
		dryRun:     rawArgs['--dry-run'],
		dirs:       pdir.preprocess.dirs(rawArgs.SRC),
		extensions: pdir.preprocess.extensions(rawArgs['-e']),
	}

	args.stdin = args.dirs.indexOf('-') !== -1

	return args

}

pdir.preprocess.dirs = dirs => {

	return dirs.map(dir => {
		return dir === '-'
			? '-'
			: path.resolve(process.cwd( ), dir)
	})

}

pdir.preprocess.extensions = extensionGroups => {

	return extensionGroups.map(extensionGroup => {

		const extensions = extensionGroup
			.split(constants.regexs.extensionDelimiter)
			.map(extension => {
				return extension.replace(/^[.]/, '')
			})

		return utils.hof.uniqueOf(extensions)

	})

}





pdir.validate = args => {

	pdir.validate.extensions(args.extensions)
	pdir.validate.dirs(args.dirs)

	return args

}

pdir.validate.extensions = extensions => {

	const usedExtensions = Array.prototype.concat.apply([ ], extensions)

	if (utils.hof.uniqueOf(usedExtensions).length !== usedExtensions.length) {

		const summarised = extensions.join('|')

		process.stderr.write(
			'error: extensions were shared between extensions groups:\n' +
			summarised + '\n'
		)
		process.exit(1)

	}

}

pdir.validate.dirs = dirs => {

	if (dirs.indexOf('-') !== -1 && dirs.length !== 1) {
		process.stderr.write('error: you cannot use stdin and directories simultaneously.')
	}

}





module.exports = pdir
